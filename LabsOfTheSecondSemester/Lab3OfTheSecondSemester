import numpy as np
import matplotlib.pyplot as plt
from matplotlib.widgets import Slider
a_true = float(input("Введите истинное значение a: "))
b_true = float(input("Введите истинное значение b: "))
c_true = float(input("Введите истинное значение c: "))
speed = 0.01
epochs = 100
x = np.linspace(-50, 50, 200)
e = np.random.uniform(-3, 3, size=x.shape)
y = a_true * x**2 + b_true * x + c_true + e
def y_pred(x, a, b, c):
    return a * x**2 + b * x + c
def mse(y_true, y_hat):
    return np.mean((y_true - y_hat) ** 2)
history = {
    'a': [],
    'b': [],
    'c': [],
    'mse': []
}
def fit(x, y, speed, epochs):
    a = np.random.rand()
    b = np.random.rand()
    c = np.random.rand()
    for epoch in range(epochs):
        y_hat = y_pred(x, a, b, c)
        error = y_hat - y
        da = np.dot(error, x**2).mean()
        db = np.dot(error, x).mean()
        dc = error.mean()
        a -= speed * da
        b -= speed * db
        c -= speed * dc
        loss = mse(y, y_hat)
        history['a'].append(a)
        history['b'].append(b)
        history['c'].append(c)
        history['mse'].append(loss)
        if epoch % 10 == 0:
            print(f"Эпоха {epoch}, MSE: {loss:.4f}, a={a:.4f}, b={b:.4f}, c={c:.4f}")
    return a, b, c
fit(x, y, speed, epochs)
fig, ax = plt.subplots(figsize=(10, 6))
plt.subplots_adjust(bottom=0.25)
line, = ax.plot(x, y_pred(x, history['a'][0], history['b'][0], history['c'][0]), color='red', label='Предсказанная кривая')
scatter = ax.scatter(x, y, alpha=0.5, s=10, label='Исходные данные')
ax.set_title('Обучение регрессии: перемещайте ползунок для просмотра эпох')
ax.legend()
ax.grid(True)
ax_slider = plt.axes([0.25, 0.1, 0.65, 0.03])
slider = Slider(ax_slider, 'Эпоха', 0, epochs - 1, valinit=0, valstep=1)
def update(val):
    i = int(slider.val)
    a_val = history['a'][i]
    b_val = history['b'][i]
    c_val = history['c'][i]
    line.set_ydata(y_pred(x, a_val, b_val, c_val))
    fig.canvas.draw_idle()
    ax.set_title(f'Эпоха {i}: a={a_val:.3f}, b={b_val:.3f}, c={c_val:.3f}, MSE={history["mse"][i]:.3f}')
slider.on_changed(update)
plt.show()


